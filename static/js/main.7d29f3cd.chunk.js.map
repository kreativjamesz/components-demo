{"version":3,"sources":["components/Navbar.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","react_default","a","createElement","Fragment","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","class","target","Component","Sidebar","App","components_Navbar","components_Sidebar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d29f3cd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink, Link, withRouter } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <nav className='navbar navbar-expand-lg navbar-dark bg-purple'>\r\n                    <a className='navbar-brand' href='#'>\r\n                        James Billy O. Vasig\r\n                    </a>\r\n                    <button\r\n                        className='navbar-toggler'\r\n                        type='button'\r\n                        data-toggle='collapse'\r\n                        data-target='#navbarSupportedContent'\r\n                        aria-controls='navbarSupportedContent'\r\n                        aria-expanded='false'\r\n                        aria-label='Toggle navigation'\r\n                    >\r\n                        <span className='navbar-toggler-icon' />\r\n                    </button>\r\n\r\n                    <div\r\n                        className='collapse navbar-collapse'\r\n                        id='navbarSupportedContent'\r\n                    >\r\n                        <ul className='navbar-nav ml-auto'>\r\n                            <li className='nav-item active'>\r\n                                <a className='nav-link' href='#'>\r\n                                    Home{\" \"}\r\n                                    <span className='sr-only'>(current)</span>\r\n                                </a>\r\n                            </li>\r\n                            <li className='nav-item'>\r\n                                <a className='nav-link' href='#'>\r\n                                    Link\r\n                                </a>\r\n                            </li>\r\n                            <li className='nav-item dropdown'>\r\n                                <a\r\n                                    className='nav-link dropdown-toggle'\r\n                                    href='#'\r\n                                    id='navbarDropdown'\r\n                                    role='button'\r\n                                    data-toggle='dropdown'\r\n                                    aria-haspopup='true'\r\n                                    aria-expanded='false'\r\n                                >\r\n                                    Dropdown\r\n                                </a>\r\n                                <div\r\n                                    className='dropdown-menu'\r\n                                    aria-labelledby='navbarDropdown'\r\n                                >\r\n                                    <a className='dropdown-item' href='#'>\r\n                                        Action\r\n                                    </a>\r\n                                    <a className='dropdown-item' href='#'>\r\n                                        Another action\r\n                                    </a>\r\n                                    <div className='dropdown-divider' />\r\n                                    <a className='dropdown-item' href='#'>\r\n                                        Something else here\r\n                                    </a>\r\n                                </div>\r\n                            </li>\r\n                            <li className='nav-item'>\r\n                                <a className='nav-link disabled' href='#'>\r\n                                    Disabled\r\n                                </a>\r\n                            </li>\r\n                            <li className='nav-item'>\r\n                                <a\r\n                                    class='btn btn-success my-2 my-sm-0 text-white'\r\n                                    href='https://kreativjamesz.github.io'\r\n                                    target='_blank'\r\n                                >\r\n                                    My Portfolio\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nconst ukStyle = {\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    height: 0\r\n};\r\n\r\nconst divStyle = {\r\n    margin: \"40px\",\r\n    border: \"5px solid pink\"\r\n};\r\nconst pStyle = {\r\n    fontSize: \"15px\",\r\n    textAlign: \"center\"\r\n};\r\n\r\nclass Sidebar extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='sidebar-header'>\r\n                    <h3>Components Demo</h3>\r\n                </div>\r\n\r\n                <ul className='list-unstyled components'>\r\n                    <li className='active'>\r\n                        <a\r\n                            href='#homeSubmenu'\r\n                            data-toggle='collapse'\r\n                            aria-expanded='false'\r\n                            className='dropdown-toggle'\r\n                        >\r\n                            Autotaks\r\n                        </a>\r\n                        <ul className='collapse list-unstyled' id='homeSubmenu'>\r\n                            <li>\r\n                                <a href='#'>Home 1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href='#'>Home 2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href='#'>Home 3</a>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <a href='#'>About</a>\r\n                    </li>\r\n                    <li>\r\n                        <a\r\n                            href='#pageSubmenu'\r\n                            data-toggle='collapse'\r\n                            aria-expanded='false'\r\n                            className='dropdown-toggle'\r\n                        >\r\n                            Reinsurance\r\n                        </a>\r\n                        <ul className='collapse list-unstyled' id='pageSubmenu'>\r\n                            <li>\r\n                                <a href='#'>Page 1</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href='#'>Page 2</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href='#'>Page 3</a>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <a href='#'>Subject of Insurance</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href='#'>Contact</a>\r\n                    </li>\r\n                </ul>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className='App'>\n                <Navbar />\n                <div className='wrapper'>\n                    <nav id='sidebar'>\n                        <Sidebar />\n                    </nav>\n                    <div id='content'>\n                        <h1>Content</h1>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport $ from \"jquery\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport Popper from \"popper.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}